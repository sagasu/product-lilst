{"version":3,"sources":["components/product-search/product-search.js","services/number-format-service.js","components/product-item/product-item.js","components/product-list/product-list.js","services/filter-service.js","services/product-provider.js","App.js","index.js"],"names":["ProductSearch","setFilter","className","htmlFor","type","id","onChange","e","target","value","formatNumber","number","Intl","NumberFormat","minimumFractionDigits","format","ProductItem","products","map","name","sold","unitPrice","key","ProductList","filteredProducts","filter","length","product","toLowerCase","includes","filterProducts","total","reduce","flattenBranches","branches","branch","flat","mergeProducts","acc","curr","existingProduct","getProducts","Promise","all","branchNumber","fetch","then","res","json","Object","values","App","useState","setProducts","searchFilter","setSearchFilter","isReady","setIsReady","useEffect","sort","prod1","prod2","localeCompare","ReactDOM","render","document","getElementById"],"mappings":"qQAEe,SAASA,EAAT,GAAsC,IAAbC,EAAY,EAAZA,UAEhC,OACI,yBAAKC,UAAU,oBACX,2BAAOA,UAAU,eAAeC,QAAQ,gBAAxC,mBACA,2BAAOC,KAAK,OAAOC,GAAG,eAAeC,SAAU,SAACC,GAAD,OAAON,EAAUM,EAAEC,OAAOC,WCP1E,SAASC,EAAaC,GACnC,OAAO,IAAIC,KAAKC,aAAa,KAAM,CAAEC,sBAAuB,IAAKC,OAAOJ,GCE3D,SAASK,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SACnC,OACI,oCACKA,EAASC,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAMC,EAAf,EAAeA,UAAf,OACV,wBAAIC,IAAKH,GACL,4BAAKA,GACL,4BAAKT,EAAaU,EAAOC,SCJ9B,SAASE,EAAT,GAA0C,IAC3CC,ECNC,SAAwBP,EAAUQ,GAC/C,OAAGA,GAAUA,EAAOC,OAAS,EACpBT,EAASQ,QAAO,SAACE,GAAD,OAAaA,EAAQR,KAAKS,cAAcC,SAASJ,EAAOG,kBAG1EX,EDCwBa,CADuB,EAAnBb,SAAmB,EAATQ,QAEjCM,EAAQP,EAAiBQ,QAAO,SAACD,EAAD,UAAgCA,EAAhC,EAAUX,KAAV,EAAgBC,YAA0C,GAEhG,OACI,+BACI,+BACA,4BACI,uCACA,yCAGJ,+BACI,kBAACL,EAAD,CAAaC,SAAUO,KAE3B,+BACA,4BACI,qCACA,4BAAKd,EAAaqB,O,kBEvBhCE,EAAkB,SAACC,GAAD,OACpBA,EAAShB,KAAI,SAACiB,GAAD,OAAYA,EAAOlB,YAAUmB,QAExCC,EAAgB,SAACC,EAAKC,GAC1B,IAAMC,EAAkBF,EAAIC,EAAKlC,IAC7Be,EAAOmB,EAAKnB,KAIhB,OAHGoB,IACDpB,EAAOmB,EAAKnB,KAAOoB,EAAgBpB,MAE9B,2BAAKkB,GAAZ,kBAAkBC,EAAKlC,GAAvB,2BAAiCkC,GAAjC,IAAuCnB,YAU1B,SAASqB,IACtB,OAPAC,QAAQC,IACN,CAAC,EAAG,EAAG,GAAGzB,KAAI,SAAC0B,GAAD,OACZC,MAAM,aAAD,OAAcD,EAAd,UAAmCE,MAAK,SAACC,GAAD,OAASA,EAAIC,cAM3DF,KAAKb,GACLa,MAAK,SAAA7B,GAAQ,OAAIgC,OAAOC,OAAOjC,EAASe,OAAOK,EAAe,QCfnE,IA6Bec,EA7BH,WAAO,IAAD,EACgBC,mBAAS,MADzB,mBACTnC,EADS,KACCoC,EADD,OAEwBD,mBAAS,IAFjC,mBAETE,EAFS,KAEKC,EAFL,OAGcH,oBAAS,GAHvB,mBAGTI,EAHS,KAGAC,EAHA,KAcd,OATAC,qBAAU,WACRjB,IACGK,MAAK,SAAA7B,GAAQ,OAAIA,EAAS0C,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMzC,KAAK2C,cAAcD,EAAM1C,YAChF2B,MAAK,SAAC7B,GACLoC,EAAYpC,GACZwC,GAAW,QAEd,IAECD,EAKF,yBAAKtD,UAAU,gBACb,kBAACF,EAAD,CAAeC,UAAWsD,IAE1B,kBAAChC,EAAD,CACIN,SAAUA,EACVQ,OAAQ6B,KATP,yBAAKpD,UAAU,gBAAf,eClBb6D,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.98b46beb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './product-search.css';\r\nexport default function ProductSearch({ setFilter }){\r\n\r\n        return (\r\n            <div className=\"search-container\">\r\n                <label className=\"search-label\" htmlFor=\"search-input\">Search Products</label>\r\n                <input type=\"text\" id=\"search-input\" onChange={(e) => setFilter(e.target.value)}/>\r\n            </div>\r\n        );\r\n    \r\n};\r\n","export default function formatNumber(number) {\r\n  return new Intl.NumberFormat(\"en\", { minimumFractionDigits: 2 }).format(number);\r\n}\r\n\r\n","import React from 'react';\r\nimport formatNumber from '../../services/number-format-service';\r\n\r\nexport default function ProductItem ({ products }) {\r\n    return(\r\n        <>\r\n            {products.map(({ name, sold, unitPrice }) => (\r\n                <tr key={name}>\r\n                    <td>{name}</td>\r\n                    <td>{formatNumber(sold * unitPrice)}</td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};","import React from \"react\";\r\nimport ProductItem from '../product-item/product-item';\r\nimport filterProducts from '../../services/filter-service';\r\nimport formatNumber from '../../services/number-format-service';\r\n\r\nexport default function ProductList({products, filter}) {\r\n        const filteredProducts = filterProducts(products, filter);\r\n        const total = filteredProducts.reduce((total, { sold, unitPrice }) => total + sold * unitPrice, 0);\r\n\r\n        return (\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>Product</th>\r\n                    <th>Revenue</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <ProductItem products={filteredProducts}></ProductItem>\r\n                </tbody>\r\n                <tfoot>\r\n                <tr>\r\n                    <td>Total</td>\r\n                    <td>{formatNumber(total)}</td>\r\n                </tr>\r\n                </tfoot>\r\n            </table>\r\n        );\r\n};\r\n","export default function filterProducts(products, filter){\r\n  if(filter && filter.length > 0){\r\n    return products.filter((product) => product.name.toLowerCase().includes(filter.toLowerCase()));\r\n  }\r\n\r\n  return products;\r\n}","const flattenBranches = (branches) => \r\n    branches.map((branch) => branch.products).flat();\r\n\r\nconst mergeProducts = (acc, curr) => {\r\n  const existingProduct = acc[curr.id];\r\n  let sold = curr.sold;\r\n  if(existingProduct){\r\n    sold = curr.sold + existingProduct.sold\r\n  }\r\n  return { ...acc, [curr.id]: { ...curr, sold } };\r\n};\r\n\r\nconst getBranches = () =>\r\n  Promise.all(\r\n    [1, 2, 3].map((branchNumber) =>\r\n      fetch(`api/branch${branchNumber}.json`).then((res) => res.json())\r\n    )\r\n  );\r\n\r\nexport default function getProducts (){\r\n  return getBranches()\r\n    .then(flattenBranches)\r\n    .then(products => Object.values(products.reduce(mergeProducts, {})));\r\n}","import React, { useState, useEffect } from \"react\";\n\nimport \"./App.css\";\nimport ProductSearch from './components/product-search/product-search';\nimport ProductList from './components/product-list/product-list';\nimport getProducts from './services/product-provider';\n\nconst App = () => {\n  const [products, setProducts] = useState(null);\n  const [searchFilter, setSearchFilter] = useState(\"\");\n  const [isReady, setIsReady] = useState(false);\n\n    useEffect(() => {\n      getProducts()\n        .then(products => products.sort((prod1, prod2) => prod1.name.localeCompare(prod2.name)))\n        .then((products) =>{\n          setProducts(products);\n          setIsReady(true);\n        });\n    }, []);\n\n    if(!isReady){\n      return <div className=\"product-list\">Loading...</div>\n    }\n\n    return (\n      <div className=\"product-list\">\n        <ProductSearch setFilter={setSearchFilter}></ProductSearch>\n\n        <ProductList \n            products={products}\n            filter={searchFilter}></ProductList>\n      </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}